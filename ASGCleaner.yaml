AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM function to automatically clean up Auto Scaling Groups left behind by failed CodeDeploy Blue/Green deployments
Resources:
  ASGCleaner:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      Handler: index.lambda_handler
      Runtime: python3.7
      Policies:
       - Version: '2012-10-17'
         Statement:
           - Effect: Allow
             Action:
               - codedeploy:*
             Resource: '*'
           - Effect: Allow
             Action:
               - autoscaling:*
             Resource: !Sub 'arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/CodeDeploy_*'
      Events:
        FailedDeployments:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.codedeploy
              detail-type:
                - CodeDeploy Deployment State-change Notification
              detail:
                state:
                  - FAILURE
      InlineCode: |

        import boto3
        cd_client = boto3.client('codedeploy')
        asg_client = boto3.client('autoscaling')


        def lambda_handler(event, context):

          # Get the deployment details

          application =  event['detail']['application']
          deploymentId = event['detail']['deploymentId']
          deploymentGroup = event['detail']['deploymentGroup']

          # Get the ASG created by this failed deployment

          print(f"Starting cleanup for failed deployment {deploymentId} (Application = {application} | Deployment Group = {deploymentGroup})")
          asg = 'CodeDeploy_' + deploymentGroup + '_' + deploymentId

          print('AutoScaling Group: ', asg)
          deployment = cd_client.get_deployment(deploymentId=deploymentId)
          deployment_type = deployment['deploymentInfo']['deploymentStyle']['deploymentType']

          print('Deployment Type:', deployment_type)

          # Only Blue Green Deployments should be deleted
          if(deployment_type == 'BLUE_GREEN'):
              try:
                  print(f"Attempting to remove Auto Scaling Group '{asg}'")
                  response = asg_client.delete_auto_scaling_group(AutoScalingGroupName=asg,ForceDelete = True)
                  print('Auto Scaling Group ', asg, 'removed successfully')
              except Exception as e:
                  print('Could not delete the ASG.')
                  print('Reason:', e)
              finally:
                  print('Process Complete.')
          else:
              print('The deployment is not a blue green deployment. Taking no action.')
